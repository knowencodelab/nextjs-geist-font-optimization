{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/UserContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'instructor' | 'student';\n  approved: boolean;\n}\n\ninterface UserContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<{ success: boolean; error?: string; user?: User }>;\n  register: (name: string, email: string, password: string, role: 'student' | 'instructor') => Promise<{ success: boolean; error?: string }>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: React.FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<{ success: boolean; error?: string; user?: User }> => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.user);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        return { success: true, user: data.user };\n      } else {\n        return { success: false, error: data.error || 'Login failed' };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const register = async (\n    name: string, \n    email: string, \n    password: string, \n    role: 'student' | 'instructor'\n  ): Promise<{ success: boolean; error?: string }> => {\n    try {\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password, role }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        return { success: true };\n      } else {\n        return { success: false, error: data.error || 'Registration failed' };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const value: UserContextType = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAoBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAYN,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,+CAA+C;YAC/C,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,IAAI;oBACF,QAAQ,KAAK,KAAK,CAAC;gBACrB,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,6BAA6B;oBAC3C,aAAa,UAAU,CAAC;gBAC1B;YACF;YACA,WAAW;QACb;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,mBAAmB;gBAC9C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,QAAQ,KAAK,IAAI;gBACjB,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,IAAI;gBACrD,OAAO;oBAAE,SAAS;oBAAM,MAAM,KAAK,IAAI;gBAAC;YAC1C,OAAO;gBACL,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,KAAK,IAAI;gBAAe;YAC/D;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAmC;QACrE;IACF;IAEA,MAAM,WAAW,OACf,MACA,OACA,UACA;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,sBAAsB;gBACjD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAM;oBAAO;oBAAU;gBAAK;YACrD;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,OAAO;oBAAE,SAAS;gBAAK;YACzB,OAAO;gBACL,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,KAAK,IAAI;gBAAsB;YACtE;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAmC;QACrE;IACF;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IAzFa;KAAA","debugId":null}}]
}